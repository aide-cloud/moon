// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: merr/err.proto

package merr

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorReason int32

const (
	// 用于表单验证错误
	ErrorReason_ALERT ErrorReason = 0
	// 用于弹窗验证错误
	ErrorReason_MODAL ErrorReason = 1
	// 用于toast验证错误
	ErrorReason_TOAST ErrorReason = 2
	// 用于通知验证错误
	ErrorReason_NOTIFICATION ErrorReason = 3
	// 用于重定向验证错误, 跳转到指定页面
	ErrorReason_REDIRECT ErrorReason = 4
	// 管理员不能删除
	ErrorReason_ADMIN_USER_DELETE_ERR ErrorReason = 5
	// 数据源不存在
	ErrorReason_DATASOURCE_NOT_FOUND_ERR ErrorReason = 6
	// 不能删除自己
	ErrorReason_DELETE_SELF_ERR ErrorReason = 7
	// 获取锁失败
	ErrorReason_LOCK_FAILED_ERR ErrorReason = 8
	// NoPermissionErr 您没有权限操作
	ErrorReason_NO_PERMISSION_ERR ErrorReason = 9
	// 参数错误
	ErrorReason_PARAMS_ERR ErrorReason = 10
	// 密码错误
	ErrorReason_PASSWORD_ERR ErrorReason = 11
	// 新旧密码不能相同
	ErrorReason_PASSWORD_SAME_ERR ErrorReason = 12
	// 资源不存在
	ErrorReason_RESOURCE_NOT_FOUND_ERR ErrorReason = 13
	// 请稍后重试
	ErrorReason_RETRY_LATER_ERR ErrorReason = 14
	// 系统错误
	ErrorReason_SYSTEM_ERR ErrorReason = 15
	// 团队负责人不能删除
	ErrorReason_TEAM_LEADER_ERR ErrorReason = 16
	// 你已经是团队负责人了
	ErrorReason_TEAM_LEADER_REPEAT_ERR ErrorReason = 17
	// 团队名称已存在
	ErrorReason_TEAM_NAME_EXIST_ERR ErrorReason = 18
	// 团队不存在
	ErrorReason_TEAM_NOT_FOUND_ERR ErrorReason = 19
	// 团队角色不存在
	ErrorReason_TEAM_ROLE_NOT_FOUND_ERR ErrorReason = 20
	// 未登录
	ErrorReason_UN_LOGIN_ERR ErrorReason = 21
	// 用户不存在
	ErrorReason_USER_NOT_FOUND_ERR ErrorReason = 22
	// 你已经被限制使用此平台
	ErrorReason_USER_LIMIT_ERR ErrorReason = 23
	// 你已经不在该团队中
	ErrorReason_USER_NOT_IN_TEAM_ERR ErrorReason = 24
	// 你已经被该团队禁用
	ErrorReason_USER_TEAM_DISABLED_ERR ErrorReason = 25
	// 获取验证码失败
	ErrorReason_GET_CAPTCHA_ERR ErrorReason = 26
	// 验证码已失效
	ErrorReason_CAPTCHA_EXPIRED_ERR ErrorReason = 27
	// 验证码错误
	ErrorReason_CAPTCHA_ERR ErrorReason = 28
	// 验证码无效
	ErrorReason_CAPTCHA_INVALID_ERR ErrorReason = 29
	// metric指标不存在
	ErrorReason_METRIC_NOT_FOUND_ERR ErrorReason = 30
	// 依赖错误
	ErrorReason_DEPENDENCY_ERR ErrorReason = 31
	// 数据库连接失败
	ErrorReason_DB_CONNECT_ERR ErrorReason = 32
	// 不支持的数据源类型
	ErrorReason_UNSUPPORTED_DATASOURCE_TYPE_ERR ErrorReason = 33
	// 请联系管理员分配权限
	ErrorReason_NO_PERMISSION_TO_OPERATE_ERR ErrorReason = 34
	// 参数校验失败
	ErrorReason_PARAMS_VALIDATE_ERR ErrorReason = 35
	// 请创建您的团队
	ErrorReason_NO_TEAM_ERR ErrorReason = 36
	// 字典不存在
	ErrorReason_DICT_NOT_FOUND_ERR ErrorReason = 37
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:  "ALERT",
		1:  "MODAL",
		2:  "TOAST",
		3:  "NOTIFICATION",
		4:  "REDIRECT",
		5:  "ADMIN_USER_DELETE_ERR",
		6:  "DATASOURCE_NOT_FOUND_ERR",
		7:  "DELETE_SELF_ERR",
		8:  "LOCK_FAILED_ERR",
		9:  "NO_PERMISSION_ERR",
		10: "PARAMS_ERR",
		11: "PASSWORD_ERR",
		12: "PASSWORD_SAME_ERR",
		13: "RESOURCE_NOT_FOUND_ERR",
		14: "RETRY_LATER_ERR",
		15: "SYSTEM_ERR",
		16: "TEAM_LEADER_ERR",
		17: "TEAM_LEADER_REPEAT_ERR",
		18: "TEAM_NAME_EXIST_ERR",
		19: "TEAM_NOT_FOUND_ERR",
		20: "TEAM_ROLE_NOT_FOUND_ERR",
		21: "UN_LOGIN_ERR",
		22: "USER_NOT_FOUND_ERR",
		23: "USER_LIMIT_ERR",
		24: "USER_NOT_IN_TEAM_ERR",
		25: "USER_TEAM_DISABLED_ERR",
		26: "GET_CAPTCHA_ERR",
		27: "CAPTCHA_EXPIRED_ERR",
		28: "CAPTCHA_ERR",
		29: "CAPTCHA_INVALID_ERR",
		30: "METRIC_NOT_FOUND_ERR",
		31: "DEPENDENCY_ERR",
		32: "DB_CONNECT_ERR",
		33: "UNSUPPORTED_DATASOURCE_TYPE_ERR",
		34: "NO_PERMISSION_TO_OPERATE_ERR",
		35: "PARAMS_VALIDATE_ERR",
		36: "NO_TEAM_ERR",
		37: "DICT_NOT_FOUND_ERR",
	}
	ErrorReason_value = map[string]int32{
		"ALERT":                           0,
		"MODAL":                           1,
		"TOAST":                           2,
		"NOTIFICATION":                    3,
		"REDIRECT":                        4,
		"ADMIN_USER_DELETE_ERR":           5,
		"DATASOURCE_NOT_FOUND_ERR":        6,
		"DELETE_SELF_ERR":                 7,
		"LOCK_FAILED_ERR":                 8,
		"NO_PERMISSION_ERR":               9,
		"PARAMS_ERR":                      10,
		"PASSWORD_ERR":                    11,
		"PASSWORD_SAME_ERR":               12,
		"RESOURCE_NOT_FOUND_ERR":          13,
		"RETRY_LATER_ERR":                 14,
		"SYSTEM_ERR":                      15,
		"TEAM_LEADER_ERR":                 16,
		"TEAM_LEADER_REPEAT_ERR":          17,
		"TEAM_NAME_EXIST_ERR":             18,
		"TEAM_NOT_FOUND_ERR":              19,
		"TEAM_ROLE_NOT_FOUND_ERR":         20,
		"UN_LOGIN_ERR":                    21,
		"USER_NOT_FOUND_ERR":              22,
		"USER_LIMIT_ERR":                  23,
		"USER_NOT_IN_TEAM_ERR":            24,
		"USER_TEAM_DISABLED_ERR":          25,
		"GET_CAPTCHA_ERR":                 26,
		"CAPTCHA_EXPIRED_ERR":             27,
		"CAPTCHA_ERR":                     28,
		"CAPTCHA_INVALID_ERR":             29,
		"METRIC_NOT_FOUND_ERR":            30,
		"DEPENDENCY_ERR":                  31,
		"DB_CONNECT_ERR":                  32,
		"UNSUPPORTED_DATASOURCE_TYPE_ERR": 33,
		"NO_PERMISSION_TO_OPERATE_ERR":    34,
		"PARAMS_VALIDATE_ERR":             35,
		"NO_TEAM_ERR":                     36,
		"DICT_NOT_FOUND_ERR":              37,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_merr_err_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_merr_err_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_merr_err_proto_rawDescGZIP(), []int{0}
}

var File_merr_err_proto protoreflect.FileDescriptor

var file_merr_err_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x72, 0x2f, 0x65, 0x72, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x72, 0x72, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a,
	0xde, 0x15, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x0f, 0x0a, 0x05, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0x95, 0x03,
	0x12, 0x0f, 0x0a, 0x05, 0x4d, 0x4f, 0x44, 0x41, 0x4c, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45, 0x95,
	0x03, 0x12, 0x0f, 0x0a, 0x05, 0x54, 0x4f, 0x41, 0x53, 0x54, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0x45,
	0x95, 0x03, 0x12, 0x16, 0x0a, 0x0c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x03, 0x1a, 0x04, 0xa8, 0x45, 0x95, 0x03, 0x12, 0x3e, 0x0a, 0x08, 0x52, 0x45,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x04, 0x1a, 0x30, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45,
	0x09, 0xe8, 0xaf, 0xb7, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xba, 0x45, 0x08, 0x52, 0x45, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0xc2, 0x45, 0x12, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x06, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x4f, 0x0a, 0x15, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x45, 0x52, 0x52, 0x10, 0x05, 0x1a, 0x34, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x15, 0xe7, 0xae,
	0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x91, 0x98, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe5, 0x88, 0xa0,
	0xe9, 0x99, 0xa4, 0xba, 0x45, 0x15, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x52, 0x0a, 0x18, 0x44,
	0x41, 0x54, 0x41, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x06, 0x1a, 0x34, 0xa8, 0x45, 0x95, 0x03, 0xb2,
	0x45, 0x12, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xba, 0x90, 0xe4, 0xb8, 0x8d, 0xe5, 0xad,
	0x98, 0xe5, 0x9c, 0xa8, 0xba, 0x45, 0x18, 0x44, 0x41, 0x54, 0x41, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x12,
	0x40, 0x0a, 0x0f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x45,
	0x52, 0x52, 0x10, 0x07, 0x1a, 0x2b, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x12, 0xe4, 0xb8, 0x8d,
	0xe8, 0x83, 0xbd, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe8, 0x87, 0xaa, 0xe5, 0xb7, 0xb1, 0xba,
	0x45, 0x0f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x52,
	0x52, 0x12, 0x3d, 0x0a, 0x0f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0x08, 0x1a, 0x28, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x0f, 0xe8,
	0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe9, 0x94, 0x81, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xba, 0x45,
	0x0f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52,
	0x12, 0x57, 0x0a, 0x11, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x09, 0x1a, 0x40, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x15,
	0xe6, 0x82, 0xa8, 0xe6, 0xb2, 0xa1, 0xe6, 0x9c, 0x89, 0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90, 0xe6,
	0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xba, 0x45, 0x11, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0xc2, 0x45, 0x0d, 0x0a, 0x04, 0x72, 0x62,
	0x61, 0x63, 0x12, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0a, 0x1a, 0x20, 0xa8, 0x45, 0x95, 0x03, 0xb2,
	0x45, 0x0c, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xba, 0x45,
	0x0a, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x34, 0x0a, 0x0c, 0x50,
	0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0b, 0x1a, 0x22, 0xa8,
	0x45, 0x95, 0x03, 0xb2, 0x45, 0x0c, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe9, 0x94, 0x99, 0xe8,
	0xaf, 0xaf, 0xba, 0x45, 0x0c, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x45, 0x52,
	0x52, 0x12, 0x4a, 0x0a, 0x11, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x41,
	0x4d, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0c, 0x1a, 0x33, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45,
	0x18, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xa7, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe4, 0xb8, 0x8d,
	0xe8, 0x83, 0xbd, 0xe7, 0x9b, 0xb8, 0xe5, 0x90, 0x8c, 0xba, 0x45, 0x11, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x41, 0x4d, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x4b, 0x0a,
	0x16, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0d, 0x1a, 0x2f, 0xa8, 0x45, 0x95, 0x03, 0xb2,
	0x45, 0x0f, 0xe8, 0xb5, 0x84, 0xe6, 0xba, 0x90, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c,
	0xa8, 0xba, 0x45, 0x16, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x3d, 0x0a, 0x0f, 0x52, 0x45,
	0x54, 0x52, 0x59, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0e, 0x1a,
	0x28, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x0f, 0xe8, 0xaf, 0xb7, 0xe7, 0xa8, 0x8d, 0xe5, 0x90,
	0x8e, 0xe9, 0x87, 0x8d, 0xe8, 0xaf, 0x95, 0xba, 0x45, 0x0f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f,
	0x4c, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x30, 0x0a, 0x0a, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0f, 0x1a, 0x20, 0xa8, 0x45, 0xf4, 0x03, 0xb2,
	0x45, 0x0c, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xba, 0x45,
	0x0a, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x49, 0x0a, 0x0f, 0x54,
	0x45, 0x41, 0x4d, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x10,
	0x1a, 0x34, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x1b, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xe8,
	0xb4, 0x9f, 0xe8, 0xb4, 0xa3, 0xe4, 0xba, 0xba, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe5, 0x88,
	0xa0, 0xe9, 0x99, 0xa4, 0xba, 0x45, 0x0f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4c, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x5a, 0x0a, 0x16, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4c,
	0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x5f, 0x45, 0x52, 0x52,
	0x10, 0x11, 0x1a, 0x3e, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x1e, 0xe4, 0xbd, 0xa0, 0xe5, 0xb7,
	0xb2, 0xe7, 0xbb, 0x8f, 0xe6, 0x98, 0xaf, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xe8, 0xb4, 0x9f,
	0xe8, 0xb4, 0xa3, 0xe4, 0xba, 0xba, 0xe4, 0xba, 0x86, 0xba, 0x45, 0x16, 0x54, 0x45, 0x41, 0x4d,
	0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x5f, 0x45,
	0x52, 0x52, 0x12, 0x69, 0x0a, 0x13, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x12, 0x1a, 0x50, 0xa8, 0x45, 0x95,
	0x03, 0xb2, 0x45, 0x15, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0,
	0xe5, 0xb7, 0xb2, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0xba, 0x45, 0x13, 0x54, 0x45, 0x41, 0x4d,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0xc2,
	0x45, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x43, 0x0a,
	0x12, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f,
	0x45, 0x52, 0x52, 0x10, 0x13, 0x1a, 0x2b, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x0f, 0xe5, 0x9b,
	0xa2, 0xe9, 0x98, 0x9f, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0xba, 0x45, 0x12,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45,
	0x52, 0x52, 0x12, 0x53, 0x0a, 0x17, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x14, 0x1a,
	0x36, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x15, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xe8, 0xa7,
	0x92, 0xe8, 0x89, 0xb2, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0xba, 0x45, 0x17,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x46, 0x0a, 0x0c, 0x55, 0x4e, 0x5f, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x15, 0x1a, 0x34, 0xa8, 0x45, 0x95, 0x03, 0xb2,
	0x45, 0x09, 0xe6, 0x9c, 0xaa, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xba, 0x45, 0x0c, 0x55, 0x4e,
	0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0xc2, 0x45, 0x12, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x06, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x58, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x16, 0x1a, 0x40, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x0f,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0xba,
	0x45, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x5f, 0x45, 0x52, 0x52, 0xc2, 0x45, 0x12, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x06, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x62, 0x0a, 0x0e, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x17, 0x1a, 0x4e, 0xa8,
	0x45, 0x95, 0x03, 0xb2, 0x45, 0x21, 0xe4, 0xbd, 0xa0, 0xe5, 0xb7, 0xb2, 0xe7, 0xbb, 0x8f, 0xe8,
	0xa2, 0xab, 0xe9, 0x99, 0x90, 0xe5, 0x88, 0xb6, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe6, 0xad,
	0xa4, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xba, 0x45, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x52, 0x52, 0xc2, 0x45, 0x12, 0x0a, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x06, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x68, 0x0a,
	0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x41,
	0x4d, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x18, 0x1a, 0x4e, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x1b,
	0xe4, 0xbd, 0xa0, 0xe5, 0xb7, 0xb2, 0xe7, 0xbb, 0x8f, 0xe4, 0xb8, 0x8d, 0xe5, 0x9c, 0xa8, 0xe8,
	0xaf, 0xa5, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xe4, 0xb8, 0xad, 0xba, 0x45, 0x14, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x45,
	0x52, 0x52, 0xc2, 0x45, 0x12, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x06, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x6c, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x45, 0x52,
	0x52, 0x10, 0x19, 0x1a, 0x50, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x1b, 0xe4, 0xbd, 0xa0, 0xe5,
	0xb7, 0xb2, 0xe7, 0xbb, 0x8f, 0xe8, 0xa2, 0xab, 0xe8, 0xaf, 0xa5, 0xe5, 0x9b, 0xa2, 0xe9, 0x98,
	0x9f, 0xe7, 0xa6, 0x81, 0xe7, 0x94, 0xa8, 0xba, 0x45, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54,
	0x45, 0x41, 0x4d, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52,
	0xc2, 0x45, 0x12, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x06, 0x2f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x41, 0x50,
	0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x1a, 0x1a, 0x2e, 0xa8, 0x45, 0x95, 0x03,
	0xb2, 0x45, 0x15, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7,
	0xa0, 0x81, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xba, 0x45, 0x0f, 0x47, 0x45, 0x54, 0x5f, 0x43,
	0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x66, 0x0a, 0x13, 0x43, 0x41,
	0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x45, 0x52,
	0x52, 0x10, 0x1b, 0x1a, 0x4d, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x12, 0xe9, 0xaa, 0x8c, 0xe8,
	0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xe5, 0xb7, 0xb2, 0xe8, 0xbf, 0x87, 0xe6, 0x9c, 0x9f, 0xba, 0x45,
	0x13, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44,
	0x5f, 0x45, 0x52, 0x52, 0xc2, 0x45, 0x1b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x43,
	0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x45,
	0x52, 0x52, 0x12, 0x4b, 0x0a, 0x0b, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x52,
	0x52, 0x10, 0x1c, 0x1a, 0x3a, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x0f, 0xe9, 0xaa, 0x8c, 0xe8,
	0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xba, 0x45, 0x0b, 0x43, 0x41,
	0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x52, 0x52, 0xc2, 0x45, 0x13, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x0b, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x12,
	0x63, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x1d, 0x1a, 0x4a, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45,
	0x0f, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xe6, 0x97, 0xa0, 0xe6, 0x95, 0x88,
	0xba, 0x45, 0x13, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x45, 0x52, 0x52, 0xc2, 0x45, 0x1b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x13, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x45, 0x52, 0x52, 0x12, 0x47, 0x0a, 0x14, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x1e, 0x1a, 0x2d,
	0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x0f, 0xe6, 0x8c, 0x87, 0xe6, 0xa0, 0x87, 0xe4, 0xb8, 0x8d,
	0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0xba, 0x45, 0x14, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x38, 0x0a,
	0x0e, 0x44, 0x45, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x10,
	0x1f, 0x1a, 0x24, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x0c, 0xe4, 0xbe, 0x9d, 0xe8, 0xb5, 0x96,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xba, 0x45, 0x0e, 0x44, 0x45, 0x50, 0x45, 0x4e, 0x44, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x41, 0x0a, 0x0e, 0x44, 0x42, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x20, 0x1a, 0x2d, 0xa8, 0x45, 0x95,
	0x03, 0xb2, 0x45, 0x15, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0xba, 0x93, 0xe8, 0xbf, 0x9e,
	0xe6, 0x8e, 0xa5, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xba, 0x45, 0x0e, 0x44, 0x42, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x69, 0x0a, 0x1f, 0x55, 0x4e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x21, 0x1a,
	0x44, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x1b, 0xe4, 0xb8, 0x8d, 0xe6, 0x94, 0xaf, 0xe6, 0x8c,
	0x81, 0xe7, 0x9a, 0x84, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xba, 0x90, 0xe7, 0xb1, 0xbb,
	0xe5, 0x9e, 0x8b, 0xba, 0x45, 0x1f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x66, 0x0a, 0x1c, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x22, 0x1a, 0x44, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x1e,
	0xe8, 0xaf, 0xb7, 0xe8, 0x81, 0x94, 0xe7, 0xb3, 0xbb, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5,
	0x91, 0x98, 0xe5, 0x88, 0x86, 0xe9, 0x85, 0x8d, 0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90, 0xba, 0x45,
	0x1c, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x4f, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x48, 0x0a,
	0x13, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x53, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0x23, 0x1a, 0x2f, 0xa8, 0x45, 0x95, 0x03, 0xb2, 0x45, 0x12, 0xe5,
	0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe6, 0xa0, 0xa1, 0xe9, 0xaa, 0x8c, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4,
	0xa5, 0xba, 0x45, 0x13, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x53, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x12, 0x3b, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x54, 0x45,
	0x41, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x24, 0x1a, 0x2a, 0xa8, 0x45, 0xc8, 0x01, 0xb2, 0x45,
	0x15, 0xe8, 0xaf, 0xb7, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x82, 0xa8, 0xe7, 0x9a, 0x84,
	0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xba, 0x45, 0x0b, 0x4e, 0x4f, 0x5f, 0x54, 0x45, 0x41, 0x4d,
	0x5f, 0x45, 0x52, 0x52, 0x12, 0x44, 0x0a, 0x12, 0x44, 0x49, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x25, 0x1a, 0x2c, 0xa8, 0x45,
	0x95, 0x03, 0xb2, 0x45, 0x10, 0xe5, 0xad, 0x97, 0xe5, 0x85, 0xb8, 0xe4, 0xb8, 0x8d, 0xe5, 0xad,
	0x98, 0xe5, 0x9c, 0xa8, 0x21, 0xba, 0x45, 0x12, 0x44, 0x49, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x1a, 0x04, 0xa0, 0x45, 0x93, 0x03,
	0x42, 0x37, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x72, 0x72, 0x50, 0x01, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x64, 0x65, 0x2d,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2f, 0x6d, 0x6f, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x65, 0x72, 0x72, 0x3b, 0x6d, 0x65, 0x72, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_merr_err_proto_rawDescOnce sync.Once
	file_merr_err_proto_rawDescData = file_merr_err_proto_rawDesc
)

func file_merr_err_proto_rawDescGZIP() []byte {
	file_merr_err_proto_rawDescOnce.Do(func() {
		file_merr_err_proto_rawDescData = protoimpl.X.CompressGZIP(file_merr_err_proto_rawDescData)
	})
	return file_merr_err_proto_rawDescData
}

var file_merr_err_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_merr_err_proto_goTypes = []any{
	(ErrorReason)(0), // 0: api.merr.ErrorReason
}
var file_merr_err_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_merr_err_proto_init() }
func file_merr_err_proto_init() {
	if File_merr_err_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_merr_err_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_merr_err_proto_goTypes,
		DependencyIndexes: file_merr_err_proto_depIdxs,
		EnumInfos:         file_merr_err_proto_enumTypes,
	}.Build()
	File_merr_err_proto = out.File
	file_merr_err_proto_rawDesc = nil
	file_merr_err_proto_goTypes = nil
	file_merr_err_proto_depIdxs = nil
}
