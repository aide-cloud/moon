syntax = "proto3";

package api.admin.dict;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "admin/model.proto";
import "enum.proto";
import "global.proto";

// 字典
option go_package = "github.com/aide-family/moon/api/admin/dict;dict";
option java_multiple_files = true;
option java_package = "api.admin.dict";

// 字典服务
service Dict {
  // 创建字典
  rpc CreateDict(CreateDictRequest) returns (CreateDictReply) {
    option (google.api.http) = {
      post: "/v1/dict/create"
      body: "*"
    };
  }

  // 更新用户
  rpc UpdateDict (UpdateDictRequest) returns (UpdateDictReply) {
    option (google.api.http) = {
      put: "/v1/dict/update/{id}"
      body: "*"
    };
  }

  // 字典列表
  rpc ListDict (GetDictSelectListRequest) returns (ListDictReply) {
    option (google.api.http) = {
      post: "/v1/dict/list"
      body: "*"
    };
  }

  // 批量修改字典状态
  rpc BatchUpdateDictStatus (BatchUpdateDictStatusRequest) returns (BatchUpdateDictStatusReply) {
    option (google.api.http) = {
      put: "/v1/dict/status"
      body: "*"
    };
  }

  // 删除字典
  rpc DeleteDict (DeleteDictRequest) returns (DeleteDictReply) {
    option (google.api.http) = {
      delete: "/v1/dict/delete/{id}"
    };
  }

  // 获取字典
  rpc GetDict (GetDictRequest) returns (GetDictReply) {
    option (google.api.http) = {
      get: "/v1/dict/get/{id}"
    };
  }

  // 字典类型列表
  rpc ListDictType (ListDictTypeRequest) returns (ListDictTypeReply) {
    option (google.api.http) = {
      post: "/v1/dict/type/list"
      body: "*"
    };
  }
}

message BatchUpdateDictStatusRequest{
  // 字典id列表
  repeated uint32 ids = 1 [(buf.validate.field).cel = {
    message: "请选择要更新的字典id",
    expression: "this.size() > 0"
  }, (buf.validate.field).cel = {
    message: "必须保证修改对象数据唯一",
    expression: "this.unique()"
  }];
  // 状态
  Status status = 2 [(buf.validate.field).cel = {
    expression: "(this in [1, 2])",
    message: "状态值必须在[启用(1), 禁用(2)]之间",
  }];
}
message BatchUpdateDictStatusReply{}

message CreateDictRequest {
  // 字典名称
  string name = 1 [(buf.validate.field).cel = {
    message: "字典名称不允许为空",
    expression: "this.size() != 0"
  }];
  // 字典值
  string value = 2 [(buf.validate.field).cel = {
    message: "字典键值长度限制在0-500个字符",
    expression: "this.size() <= 500"
  }];
  // 字典类型
  DictType dictType = 3 [(buf.validate.field).cel = {
    expression: "(this in [0, 1, 2, 3, 4, 5, 6, 7, 8])",
    message: "字典类型值必须在[未知(0), 标签(1), 注解(2), 策略(3), 策略组(4),告警级别(5),告警状态(6),通知类型(7),告警页面(8)]之间",
  }];
  // 颜色类型
  string colorType = 4 [(buf.validate.field).cel = {
    message: "颜色类型长度限制在0-50个字符",
    expression: "this.size() <= 50"
  }];
  // css样式
  string cssClass = 5 [(buf.validate.field).cel = {
    message: "css样式长度限制在0-100个字符",
    expression: "this.size() <= 100"
  }];
  // 图标
  string icon = 6 [(buf.validate.field).cel = {
    message: "icon长度限制在0-500个字符",
    expression: "this.size() <= 500"
  }];
  // 图片地址
  string imageUrl = 7 [(buf.validate.field).cel = {
    message: "image url长度限制在0-500个字符",
    expression: "this.size() <= 500"
  }];
  // 状态
  Status status = 8 [(buf.validate.field).cel = {
    expression: "(this in [1,2])",
    message: "状态值必须在[ 启用(1), 禁用(2)]之间",
  }];
  // 语言编码
  string languageCode = 9 [(buf.validate.field).cel = {
    expression: "(this in ['zh-CN','en-US'])",
    message: "字典类型值必须在[中文(zh-CN), 英文(en-US)]之间",
  }];
  // 备注
  string remark = 10 [(buf.validate.field).cel = {
    message: "字典备注长度限制在0-500个字符",
    expression: "this.size() <= 500"
  }];
}
message CreateDictReply {}

message GetDictSelectListRequest {
  // 分页参数
  PaginationReq pagination = 1 ;
  // 关键字模糊查询
  string keyword = 2 [(buf.validate.field).cel = {
    message: "关键字模糊查询长度限制在0-20个字符",
    expression: "this.size() <= 20"
  }];
  // 状态查询
  Status status = 3 [(buf.validate.field).cel = {
    expression: "(this in [0, 1, 2])",
    message: "状态值必须在[全部(0), 启用(1), 禁用(2)]之间",
  }];
  // 字典类型
  DictType dictType = 4 [(buf.validate.field).cel = {
    expression: "(this in [0, 1, 2, 3, 4, 5, 6, 7, 8])",
    message: "字典类型值必须在[未知(0), 标签(1), 注解(2), 策略(3), 策略组(4),告警级别(5),告警状态(6),通知类型(7),告警页面(8)]之间",
  }];
  // 语言编码
  string languageCode = 5 [(buf.validate.field).cel = {
    expression: "(this in ['zh-CN','en-US'])",
    message: "字典类型值必须在[中文(zh-CN), 英文(en-US)]之间",
  }];
}


message ListDictReply{
  // 字典列表
  repeated Dict list = 1;
  // 分页信息
  PaginationReply pagination = 2;
}

message UpdateDictRequest {
  // 字典id
  uint32 id = 1 [(buf.validate.field).cel = {
    message: "字典id不能为空！",
    expression: "this > 0"
  }];
  // 更新的数据
  CreateDictRequest data = 2 [(buf.validate.field).required = true];
}
message UpdateDictReply {}

message DeleteDictRequest {
  // 字典id
  uint32 id = 1 [(buf.validate.field).cel = {
    message: "字典id不能为空！",
    expression: "this > 0"
  }];
}
message DeleteDictReply {}

message GetDictRequest{
  // 字典id
  uint32 id = 1 [(buf.validate.field).cel = {
    message: "字典id不能为空！",
    expression: "this > 0"
  }];
}
message GetDictReply{
  Dict dict = 1;
}

message ListDictTypeRequest {}
message ListDictTypeReply{
  // 字典类型列表
  repeated EnumItem list = 1;
}


