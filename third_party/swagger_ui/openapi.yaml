# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /health:
        get:
            tags:
                - Health
            operationId: Health_Check
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.CheckReply'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /metric/query:
        post:
            tags:
                - Metric
            description: 查询
            operationId: Metric_Query
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.houyi.metadata.QueryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.houyi.metadata.QueryReply'
    /metric/sync/metadata:
        post:
            tags:
                - Metric
            description: 同步元数据
            operationId: Metric_SyncMetadata
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.houyi.metadata.SyncMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.houyi.metadata.SyncMetadataReply'
    /v1/admin/menu/list:
        get:
            tags:
                - Menu
            description: 获取菜单树
            operationId: Menu_ListMenu
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.resource.ListMenuReply'
    /v1/authorization/captcha:
        post:
            tags:
                - Authorization
            description: 获取验证码
            operationId: Authorization_Captcha
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.authorization.CaptchaReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.authorization.CaptchaReply'
    /v1/authorization/login:
        post:
            tags:
                - Authorization
            description: 登录
            operationId: Authorization_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.authorization.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.authorization.LoginReply'
    /v1/authorization/logout:
        post:
            tags:
                - Authorization
            description: 登出
            operationId: Authorization_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.authorization.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.authorization.LogoutReply'
    /v1/authorization/refresh:
        post:
            tags:
                - Authorization
            description: 刷新token
            operationId: Authorization_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.authorization.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.authorization.RefreshTokenReply'
    /v1/datasource:
        post:
            tags:
                - Datasource
            description: 创建数据源
            operationId: Datasource_CreateDatasource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.CreateDatasourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.CreateDatasourceReply'
    /v1/datasource/list:
        post:
            tags:
                - Datasource
            description: 获取数据源列表
            operationId: Datasource_ListDatasource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.ListDatasourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.ListDatasourceReply'
    /v1/datasource/metric/list:
        post:
            tags:
                - Metric
            description: 获取元数据列表
            operationId: Metric_ListMetric
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.ListMetricRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.ListMetricReply'
    /v1/datasource/metric/select:
        post:
            tags:
                - Metric
            description: 获取元数据列表（下拉选择接口）
            operationId: Metric_SelectMetric
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.SelectMetricRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.SelectMetricReply'
    /v1/datasource/metric/{id}:
        get:
            tags:
                - Metric
            description: 获取元数据详情
            operationId: Metric_GetMetric
            parameters:
                - name: id
                  in: path
                  description: 指标ID
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: withRelation
                  in: query
                  description: 是否加载关联数据
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.GetMetricReply'
        put:
            tags:
                - Metric
            description: 更新元数据
            operationId: Metric_UpdateMetric
            parameters:
                - name: id
                  in: path
                  description: 指标ID
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.UpdateMetricRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.UpdateMetricReply'
        delete:
            tags:
                - Metric
            description: |-
                删除指标（用于删除数据源中不再使用的或者错误的指标
                 因为同步逻辑只会同步最近时间段的指标， 所以删除后需要重新同步）
                 删除会删除该指标的所有数据， 包括标签， 标签值等
            operationId: Metric_DeleteMetric
            parameters:
                - name: id
                  in: path
                  description: 指标ID
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.DeleteMetricReply'
    /v1/datasource/select:
        post:
            tags:
                - Datasource
            description: 下拉列表
            operationId: Datasource_GetDatasourceSelect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.GetDatasourceSelectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.GetDatasourceSelectReply'
    /v1/datasource/{id}:
        get:
            tags:
                - Datasource
            description: 获取数据源详情
            operationId: Datasource_GetDatasource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.GetDatasourceReply'
        put:
            tags:
                - Datasource
            description: 更新数据源
            operationId: Datasource_UpdateDatasource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.UpdateDatasourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.UpdateDatasourceReply'
        delete:
            tags:
                - Datasource
            description: 删除数据源
            operationId: Datasource_DeleteDatasource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.DeleteDatasourceReply'
    /v1/datasource/{id}/query:
        post:
            tags:
                - Datasource
            description: 获取数据
            operationId: Datasource_DatasourceQuery
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.DatasourceQueryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.DatasourceQueryReply'
    /v1/datasource/{id}/status:
        put:
            tags:
                - Datasource
            description: 更新数据源状态
            operationId: Datasource_UpdateDatasourceStatus
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.UpdateDatasourceStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.UpdateDatasourceStatusReply'
    /v1/datasource/{id}/sync:
        post:
            tags:
                - Datasource
            description: 同步数据源元数据
            operationId: Datasource_SyncDatasourceMeta
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.datasource.SyncDatasourceMetaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.datasource.SyncDatasourceMetaReply'
    /v1/department:
        get:
            tags:
                - Department
            description: 获取部门列表（树）
            operationId: Department_ListDepartment
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.ListDepartmentReply'
        post:
            tags:
                - Department
            description: 创建部门
            operationId: Department_CreateDepartment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.CreateDepartmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.CreateDepartmentReply'
    /v1/department/admin:
        post:
            tags:
                - Department
            description: 设置部门管理员
            operationId: Department_SetDepartmentAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.SetDepartmentAdminRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.SetDepartmentAdminReply'
    /v1/department/{id}:
        get:
            tags:
                - Department
            description: 获取部门详情
            operationId: Department_GetDepartment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.GetDepartmentReply'
        put:
            tags:
                - Department
            description: 更新部门
            operationId: Department_UpdateDepartment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.UpdateDepartmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.UpdateDepartmentReply'
        delete:
            tags:
                - Department
            description: 删除部门
            operationId: Department_DeleteDepartment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.DeleteDepartmentReply'
    /v1/dict/create:
        post:
            tags:
                - Dict
            operationId: Dict_CreateDict
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.dict.CreateDictRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.dict.CreateDictReply'
    /v1/dict/delete/{id}:
        delete:
            tags:
                - Dict
            operationId: Dict_DeleteDict
            parameters:
                - name: id
                  in: path
                  description: 字典id
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.dict.DeleteDictReply'
    /v1/dict/get/{id}:
        get:
            tags:
                - Dict
            operationId: Dict_GetDict
            parameters:
                - name: id
                  in: path
                  description: 字典id
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.dict.GetDictReply'
    /v1/dict/list:
        post:
            tags:
                - Dict
            description: 字典列表
            operationId: Dict_ListDict
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.dict.GetDictSelectListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.dict.ListDictReply'
    /v1/dict/status:
        put:
            tags:
                - Dict
            description: 批量修改字典状态
            operationId: Dict_BatchUpdateDictStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.dict.BatchUpdateDictStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.dict.BatchUpdateDictStatusReply'
    /v1/dict/update/{id}:
        put:
            tags:
                - Dict
            description: 更新用户
            operationId: Dict_UpdateDict
            parameters:
                - name: id
                  in: path
                  description: 字典id
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.dict.UpdateDictRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.dict.UpdateDictReply'
    /v1/hello:
        post:
            tags:
                - Hello
            description: 测试接口, 用于输出Hello
            operationId: Hello_SayHello
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.SayHelloRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.SayHelloReply'
    /v1/my/team:
        get:
            tags:
                - Team
            description: 我的团队， 查看当前用户的团队列表
            operationId: Team_MyTeam
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.MyTeamReply'
    /v1/rabbit/push/config:
        post:
            tags:
                - Config
            operationId: Config_NotifyObject
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.rabbit.push.NotifyObjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.rabbit.push.NotifyObjectReply'
    /v1/rabbit/send/msg:
        post:
            tags:
                - Hook
            description: 发送消息, 用于接受http数据
            operationId: Hook_SendMsg
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.rabbit.hook.SendMsgRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.rabbit.hook.SendMsgReply'
    /v1/resource:
        post:
            tags:
                - Resource
            description: 获取资源列表
            operationId: Resource_ListResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.resource.ListResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.resource.ListResourceReply'
    /v1/resource/select:
        post:
            tags:
                - Resource
            description: 获取资源下拉列表
            operationId: Resource_GetResourceSelectList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.resource.GetResourceSelectListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.resource.GetResourceSelectListReply'
    /v1/resource/status:
        put:
            tags:
                - Resource
            description: 批量更新资源状态
            operationId: Resource_BatchUpdateResourceStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.resource.BatchUpdateResourceStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.resource.BatchUpdateResourceStatusReply'
    /v1/resource/{id}:
        get:
            tags:
                - Resource
            description: 获取资源详情
            operationId: Resource_GetResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.resource.GetResourceReply'
    /v1/team:
        post:
            tags:
                - Team
            description: 创建团队
            operationId: Team_CreateTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.CreateTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.CreateTeamReply'
    /v1/team/list:
        post:
            tags:
                - Team
            description: 获取团队列表
            operationId: Team_ListTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.ListTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.ListTeamReply'
    /v1/team/role:
        post:
            tags:
                - Role
            description: 创建角色
            operationId: Role_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.CreateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.CreateRoleReply'
    /v1/team/role/list:
        post:
            tags:
                - Role
            description: 获取角色列表
            operationId: Role_ListRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.ListRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.ListRoleReply'
    /v1/team/role/select:
        post:
            tags:
                - Role
            description: 角色下拉列表
            operationId: Role_GetRoleSelectList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.GetRoleSelectListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.GetRoleSelectListReply'
    /v1/team/role/{id}:
        get:
            tags:
                - Role
            description: 获取角色详情
            operationId: Role_GetRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.GetRoleReply'
        put:
            tags:
                - Role
            description: 更新角色
            operationId: Role_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.UpdateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.UpdateRoleReply'
        delete:
            tags:
                - Role
            description: 删除角色
            operationId: Role_DeleteRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.DeleteRoleReply'
    /v1/team/role/{id}/status:
        put:
            tags:
                - Role
            description: 更新角色状态
            operationId: Role_UpdateRoleStatus
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.UpdateRoleStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.UpdateRoleStatusReply'
    /v1/team/{id}:
        get:
            tags:
                - Team
            description: 获取团队详情
            operationId: Team_GetTeam
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.GetTeamReply'
        put:
            tags:
                - Team
            description: 更新团队
            operationId: Team_UpdateTeam
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.UpdateTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.UpdateTeamReply'
    /v1/team/{id}/leader/transfer:
        put:
            tags:
                - Team
            description: 移交超级管理员
            operationId: Team_TransferTeamLeader
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.TransferTeamLeaderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.TransferTeamLeaderReply'
    /v1/team/{id}/member/add:
        post:
            tags:
                - Team
            description: 添加团队成员
            operationId: Team_AddTeamMember
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.AddTeamMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.AddTeamMemberReply'
    /v1/team/{id}/member/list:
        post:
            tags:
                - Team
            description: 获取团队成员列表
            operationId: Team_ListTeamMember
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.ListTeamMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.ListTeamMemberReply'
    /v1/team/{id}/member/{userId}:
        delete:
            tags:
                - Team
            description: 移除团队成员
            operationId: Team_RemoveTeamMember
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.RemoveTeamMemberReply'
    /v1/team/{id}/member/{userId}/admin:
        put:
            tags:
                - Team
            description: 设置成管理员
            operationId: Team_SetTeamAdmin
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.SetTeamAdminRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.SetTeamAdminReply'
        delete:
            tags:
                - Team
            description: 移除团队管理员
            operationId: Team_RemoveTeamAdmin
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.RemoveTeamAdminReply'
    /v1/team/{id}/member/{userId}/role:
        put:
            tags:
                - Team
            description: 设置成员角色
            operationId: Team_SetMemberRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.SetMemberRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.SetMemberRoleReply'
    /v1/team/{id}/status:
        put:
            tags:
                - Team
            description: 修改团队状态
            operationId: Team_UpdateTeamStatus
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.team.UpdateTeamStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.team.UpdateTeamStatusReply'
    /v1/user:
        post:
            tags:
                - User
            description: 创建用户
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.CreateUserReply'
    /v1/user/avatar:
        put:
            tags:
                - User
            description: 修改用户头像
            operationId: User_UpdateUserAvatar
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.UpdateUserAvatarRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.UpdateUserAvatarReply'
    /v1/user/email:
        put:
            tags:
                - User
            description: 修改邮箱
            operationId: User_UpdateUserEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.UpdateUserEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.UpdateUserEmailReply'
    /v1/user/list:
        post:
            tags:
                - User
            description: 列表用户
            operationId: User_ListUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.ListUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.ListUserReply'
    /v1/user/password:
        put:
            tags:
                - User
            description: 重置用户密码
            operationId: User_ResetUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.ResetUserPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.ResetUserPasswordReply'
    /v1/user/password/self:
        put:
            tags:
                - User
            description: 用户修改密码
            operationId: User_ResetUserPasswordBySelf
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.ResetUserPasswordBySelfRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.ResetUserPasswordBySelfReply'
    /v1/user/phone:
        put:
            tags:
                - User
            description: 修改电话号码
            operationId: User_UpdateUserPhone
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.UpdateUserPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.UpdateUserPhoneReply'
    /v1/user/select:
        post:
            tags:
                - User
            description: 获取用户下拉列表
            operationId: User_GetUserSelectList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.GetUserSelectListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.GetUserSelectListReply'
    /v1/user/status:
        put:
            tags:
                - User
            description: 批量修改用户状态
            operationId: User_BatchUpdateUserStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.BatchUpdateUserStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.BatchUpdateUserStatusReply'
    /v1/user/{id}:
        get:
            tags:
                - User
            description: 获取用户
            operationId: User_GetUser
            parameters:
                - name: id
                  in: path
                  description: 用户id
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.GetUserReply'
        put:
            tags:
                - User
            description: 更新用户
            operationId: User_UpdateUser
            parameters:
                - name: id
                  in: path
                  description: 用户id
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.admin.user.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.UpdateUserReply'
        delete:
            tags:
                - User
            description: 删除用户
            operationId: User_DeleteUser
            parameters:
                - name: id
                  in: path
                  description: 用户id
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.admin.user.DeleteUserReply'
components:
    schemas:
        api.CheckReply:
            type: object
            properties:
                healthy:
                    type: boolean
        api.EmailConfig:
            type: object
            properties:
                user:
                    type: string
                    description: 用户
                pass:
                    type: string
                    description: 发送的邮箱密码
                host:
                    type: string
                    description: 发送的邮箱服务器
                port:
                    type: integer
                    description: 发送的邮箱端口
                    format: uint32
            description: 邮件发送配置
        api.MetricDetail:
            type: object
            properties:
                name:
                    type: string
                    description: 指标名称
                help:
                    type: string
                    description: 帮助信息
                type:
                    type: string
                    description: 类型
                labels:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/api.MetricLabelValues'
                    description: 标签集合
                unit:
                    type: string
                    description: 指标单位
            description: 查询到的数据详情， 用与元数据构建
        api.MetricLabelValues:
            type: object
            properties:
                values:
                    type: array
                    items:
                        type: string
            description: 指标标签值列表
        api.MetricQueryResult:
            type: object
            properties:
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: 标签集合
                resultType:
                    type: string
                    description: 结果类型
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.MetricQueryValue'
                    description: 结果值(图表)
                value:
                    allOf:
                        - $ref: '#/components/schemas/api.MetricQueryValue'
                    description: 结果值（单数据）
            description: Metric类型数据查询结果
        api.MetricQueryValue:
            type: object
            properties:
                value:
                    type: number
                    description: 值
                    format: double
                timestamp:
                    type: string
                    description: 时间戳
        api.PaginationReply:
            type: object
            properties:
                pageNum:
                    type: integer
                    description: 页码
                    format: int32
                pageSize:
                    type: integer
                    description: 每页数量
                    format: int32
                total:
                    type: string
                    description: 总条数
            description: 分页返回
        api.PaginationReq:
            type: object
            properties:
                pageNum:
                    type: integer
                    description: 页码
                    format: int32
                pageSize:
                    type: integer
                    description: 每页数量
                    format: int32
            description: 分页器件
        api.Receiver:
            type: object
            properties:
                hooks:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.ReceiverHook'
                phones:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.ReceiverPhone'
                emails:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.ReceiverEmail'
                emailConfig:
                    $ref: '#/components/schemas/api.EmailConfig'
        api.ReceiverEmail:
            type: object
            properties:
                to:
                    type: string
                    description: 发送给谁
                subject:
                    type: string
                    description: 发送的主题
                content:
                    type: string
                    description: 发送的内容， 优先级高于模板
                template:
                    type: string
                    description: 发送的模板，内容字段为空时， 以数据填充模板后发送
                cc:
                    type: array
                    items:
                        type: string
                    description: 抄送对象
                attachUrl:
                    type: array
                    items:
                        type: string
                    description: 附件URL，一般为oss地址
                contentType:
                    type: string
                    description: 发送的内容类型
            description: 邮件目标
        api.ReceiverHook:
            type: object
            properties:
                dingTalk:
                    allOf:
                        - $ref: '#/components/schemas/api.ReceiverHookDingTalk'
                    description: 钉钉
                feiShu:
                    allOf:
                        - $ref: '#/components/schemas/api.ReceiverHookFeiShu'
                    description: 飞书
                wechatWork:
                    allOf:
                        - $ref: '#/components/schemas/api.ReceiverHookWechatWork'
                    description: 企业微信
                other:
                    allOf:
                        - $ref: '#/components/schemas/api.ReceiverHookOther'
                    description: 其他
            description: hook目标
        api.ReceiverHookDingTalk:
            type: object
            properties:
                webhook:
                    type: string
                    description: hook地址
                secret:
                    type: string
                    description: 钉钉加签秘钥
                content:
                    type: string
                    description: 钉钉消息json内容，支持模板， 优先级高于模板
                template:
                    type: string
                    description: 模板
            description: 钉钉
        api.ReceiverHookFeiShu:
            type: object
            properties:
                webhook:
                    type: string
                    description: hook地址
                secret:
                    type: string
                    description: 钉钉加签秘钥
                content:
                    type: string
                    description: 钉钉消息json内容，支持模板， 优先级高于模板
                template:
                    type: string
                    description: 模板
            description: 飞书
        api.ReceiverHookOther:
            type: object
            properties:
                webhook:
                    type: string
                    description: hook地址
                content:
                    type: string
                    description: 钉钉消息json内容，支持模板， 优先级高于模板
                template:
                    type: string
                    description: 模板
            description: 其他
        api.ReceiverHookWechatWork:
            type: object
            properties:
                webhook:
                    type: string
                    description: hook地址
                content:
                    type: string
                    description: 钉钉消息json内容，支持模板， 优先级高于模板
                template:
                    type: string
                    description: 模板
            description: 企业微信
        api.ReceiverPhone:
            type: object
            properties: {}
            description: 电话目标
        api.admin.Datasource:
            type: object
            properties:
                id:
                    type: integer
                    description: 数据源ID
                    format: uint32
                name:
                    type: string
                    description: 数据源名称
                type:
                    type: integer
                    description: 数据源类型
                    format: enum
                endpoint:
                    type: string
                    description: 数据源地址
                status:
                    type: integer
                    description: 状态
                    format: enum
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
                config:
                    type: object
                    additionalProperties:
                        type: string
                    description: 配置信息
                remark:
                    type: string
                    description: 描述
                storageType:
                    type: integer
                    description: 存储器类型
                    format: enum
            description: 数据源模块
        api.admin.Dict:
            type: object
            properties:
                id:
                    type: integer
                    description: ID
                    format: uint32
                name:
                    type: string
                    description: 字典名称
                dictType:
                    type: integer
                    description: 字典类型
                    format: enum
                colorType:
                    type: string
                    description: 颜色类型
                value:
                    type: string
                    description: 字典值
                icon:
                    type: string
                    description: 图标
                imageUrl:
                    type: string
                    description: 图片url
                status:
                    type: integer
                    description: 状态
                    format: enum
                languageCode:
                    type: string
                    description: 语言
                remark:
                    type: string
                    description: 字典备注
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
        api.admin.Menu:
            type: object
            properties:
                id:
                    type: integer
                    description: 菜单ID
                    format: uint32
                name:
                    type: string
                    description: 菜单名称
                path:
                    type: string
                    description: 菜单路径
                icon:
                    type: string
                    description: 菜单图标
                status:
                    type: integer
                    description: 菜单状态
                    format: enum
                parentId:
                    type: integer
                    description: 父级菜单
                    format: uint32
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
                level:
                    type: integer
                    description: 菜单层级
                    format: int32
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Menu'
                    description: 菜单子级数据
            description: 系统菜单模块
        api.admin.MetricDetail:
            type: object
            properties:
                name:
                    type: string
                    description: 指标名称
                help:
                    type: string
                    description: 帮助信息
                type:
                    type: integer
                    description: 类型
                    format: enum
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.MetricLabel'
                    description: 标签集合
                unit:
                    type: string
                    description: 指标单位
                id:
                    type: integer
                    description: ID
                    format: uint32
            description: 查询到的数据详情， 用与元数据构建
        api.admin.MetricLabel:
            type: object
            properties:
                name:
                    type: string
                    description: 标签名称
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.MetricLabelValue'
                    description: 标签值
                id:
                    type: integer
                    description: ID
                    format: uint32
            description: 指标数据标签
        api.admin.MetricLabelValue:
            type: object
            properties:
                id:
                    type: integer
                    description: ID
                    format: uint32
                value:
                    type: string
                    description: 值
            description: 指标数据标签值
        api.admin.ResourceItem:
            type: object
            properties:
                id:
                    type: integer
                    description: 接口ID
                    format: uint32
                name:
                    type: string
                    description: 接口名称
                path:
                    type: string
                    description: 接口路径
                status:
                    type: integer
                    description: 接口状态
                    format: enum
                remark:
                    type: string
                    description: 备注
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
                deletedAt:
                    type: string
                    description: 删除时间
                module:
                    type: integer
                    description: 所属模块
                    format: enum
                domain:
                    type: integer
                    description: 所属领域
                    format: enum
            description: 系统API资源模块
        api.admin.Select:
            type: object
            properties:
                value:
                    type: integer
                    description: 数据值
                    format: uint32
                label:
                    type: string
                    description: 数据label
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Select'
                    description: 子级数据, 针对级联选择
                disabled:
                    type: boolean
                    description: 是否禁用
                extend:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.SelectExtend'
                    description: 针对有图标类型的配置项(可选，默认为null)
            description: 下拉选择基础数据
        api.admin.SelectExtend:
            type: object
            properties:
                icon:
                    type: string
                    description: 图标
                color:
                    type: string
                    description: 颜色
                remark:
                    type: string
                    description: 描述
                image:
                    type: string
                    description: 图片URL
        api.admin.Team:
            type: object
            properties:
                id:
                    type: integer
                    description: 团队ID
                    format: uint32
                name:
                    type: string
                    description: 团队名称
                status:
                    type: integer
                    description: 团队状态
                    format: enum
                remark:
                    type: string
                    description: 团队描述
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
                leader:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.User'
                    description: 负责人
                creator:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.User'
                    description: 创建者
                logo:
                    type: string
                    description: 团队LOGO
                admin:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.TeamMember'
                    description: 管理员（不包含创建者， 因为创建者不一定是管理员，但是包含负责人）
            description: 团队模块
        api.admin.TeamMember:
            type: object
            properties:
                userId:
                    type: integer
                    description: 用户ID
                    format: uint32
                id:
                    type: integer
                    description: 成员ID
                    format: uint32
                role:
                    type: integer
                    description: 角色
                    format: enum
                status:
                    type: integer
                    description: 状态
                    format: enum
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.User'
                    description: 用户明细
            description: 团队成员
        api.admin.TeamRole:
            type: object
            properties:
                id:
                    type: integer
                    description: 角色ID
                    format: uint32
                name:
                    type: string
                    description: 角色名称
                remark:
                    type: string
                    description: 角色描述
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
                status:
                    type: integer
                    description: 状态
                    format: enum
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.ResourceItem'
                    description: 资源列表
            description: 团队角色模块
        api.admin.User:
            type: object
            properties:
                id:
                    type: integer
                    description: 用户id
                    format: uint32
                name:
                    type: string
                    description: 用户名
                nickname:
                    type: string
                    description: 昵称
                email:
                    type: string
                    description: 邮箱
                phone:
                    type: string
                    description: 手机
                status:
                    type: integer
                    description: 状态
                    format: enum
                gender:
                    type: integer
                    description: 性别
                    format: enum
                role:
                    type: integer
                    description: 角色
                    format: enum
                avatar:
                    type: string
                    description: 头像
                remark:
                    type: string
                    description: 个人说明
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
            description: 用户模块
        api.admin.authorization.AuthCaptcha:
            type: object
            properties:
                code:
                    type: string
                    description: 验证码
                id:
                    type: string
                    description: ID
            description: 登录验证码
        api.admin.authorization.CaptchaReply:
            type: object
            properties:
                captcha:
                    type: string
                    description: 验证码base64信息, 如果是图片验证码, 则直接使用img标签展示即可, 如果是音频验证码, 则需要调用相关接口播放音频
                captchaType:
                    type: integer
                    description: 验证码类型, 0 图片验证码, 1 音频验证码
                    format: enum
                id:
                    type: string
                    description: 验证码标识
        api.admin.authorization.CaptchaReq:
            type: object
            properties:
                captchaType:
                    type: integer
                    description: 验证码类型, 0 图片验证码, 1 音频验证码
                    format: enum
                theme:
                    type: string
                    description: 主题
                width:
                    type: integer
                    description: 图片类型宽高， 不传为默认值
                    format: int32
                height:
                    type: integer
                    format: int32
            description: 验证码
        api.admin.authorization.LoginReply:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.User'
                    description: 用户信息
                token:
                    type: string
                    description: token
                redirect:
                    type: string
                    description: 重定向地址
        api.admin.authorization.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
                captcha:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.authorization.AuthCaptcha'
                    description: 验证码
                redirect:
                    type: string
                    description: 重定向地址
                teamId:
                    type: integer
                    description: 团队ID
                    format: uint32
        api.admin.authorization.LogoutReply:
            type: object
            properties:
                redirect:
                    type: string
                    description: 重定向地址
        api.admin.authorization.LogoutRequest:
            type: object
            properties: {}
        api.admin.authorization.RefreshTokenReply:
            type: object
            properties:
                token:
                    type: string
                    description: token
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.User'
                    description: 用户信息
        api.admin.authorization.RefreshTokenRequest:
            type: object
            properties:
                teamId:
                    type: integer
                    description: 团队ID
                    format: uint32
        api.admin.datasource.CreateDatasourceReply:
            type: object
            properties: {}
        api.admin.datasource.CreateDatasourceRequest:
            type: object
            properties:
                name:
                    type: string
                    description: 数据源名称
                type:
                    type: integer
                    description: 数据源类型
                    format: enum
                endpoint:
                    type: string
                    description: 数据源地址
                status:
                    type: integer
                    description: 状态
                    format: enum
                remark:
                    type: string
                    description: 描述
                config:
                    type: object
                    additionalProperties:
                        type: string
                    description: 数据源配置
                storageType:
                    type: integer
                    description: 存储器类型
                    format: enum
        api.admin.datasource.DatasourceQueryReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.MetricQueryResult'
        api.admin.datasource.DatasourceQueryRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                query:
                    type: string
                    description: 查询语句
                range:
                    type: array
                    items:
                        type: string
                    description: 查询时间范围
                step:
                    type: integer
                    description: 步长
                    format: uint32
        api.admin.datasource.DeleteDatasourceReply:
            type: object
            properties: {}
        api.admin.datasource.DeleteMetricReply:
            type: object
            properties: {}
        api.admin.datasource.GetDatasourceReply:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.admin.Datasource'
        api.admin.datasource.GetDatasourceSelectReply:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Select'
        api.admin.datasource.GetDatasourceSelectRequest:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
                limit:
                    type: integer
                    format: uint32
                storageType:
                    type: integer
                    description: 存储器类型
                    format: enum
        api.admin.datasource.GetMetricReply:
            type: object
            properties:
                data:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.MetricDetail'
                    description: 详情
                labelCount:
                    type: integer
                    description: label数量
                    format: uint32
        api.admin.datasource.ListDatasourceReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.PaginationReply'
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Datasource'
        api.admin.datasource.ListDatasourceRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReq'
                    description: 分页参数
                keyword:
                    type: string
                    description: 模糊查询
                status:
                    type: integer
                    description: 状态
                    format: enum
                type:
                    type: integer
                    description: 数据源类型
                    format: enum
                storageType:
                    type: integer
                    description: 存储器类型
                    format: enum
        api.admin.datasource.ListMetricReply:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReply'
                    description: 分页参数
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.MetricDetail'
                    description: 数据
        api.admin.datasource.ListMetricRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReq'
                    description: 分页参数
                keyword:
                    type: string
                    description: 模糊查询， 不超过20字符搜索
                metricType:
                    type: integer
                    description: 指标类型
                    format: enum
                datasourceId:
                    type: integer
                    description: 数据源ID
                    format: uint32
        api.admin.datasource.SelectMetricReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Select'
                    description: 数据
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReply'
                    description: 分页参数
        api.admin.datasource.SelectMetricRequest:
            type: object
            properties:
                keyword:
                    type: string
                    description: 模糊查询， 不超过20字符搜索
                metricType:
                    type: integer
                    description: 指标类型
                    format: enum
                datasourceId:
                    type: integer
                    description: 数据源ID
                    format: uint32
                ids:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: metric ids (用于包含默认参数的场景， 例如：编辑时候， 映射某个指标)
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReq'
                    description: 分页参数
        api.admin.datasource.SyncDatasourceMetaReply:
            type: object
            properties: {}
        api.admin.datasource.SyncDatasourceMetaRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        api.admin.datasource.UpdateDatasourceReply:
            type: object
            properties: {}
        api.admin.datasource.UpdateDatasourceRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                data:
                    $ref: '#/components/schemas/api.admin.datasource.CreateDatasourceRequest'
        api.admin.datasource.UpdateDatasourceStatusReply:
            type: object
            properties: {}
        api.admin.datasource.UpdateDatasourceStatusRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.admin.datasource.UpdateMetricReply:
            type: object
            properties: {}
        api.admin.datasource.UpdateMetricRequest:
            type: object
            properties:
                id:
                    type: integer
                    description: 指标ID
                    format: uint32
                unit:
                    type: string
                    description: 指标单位
                remark:
                    type: string
                    description: 指标描述
        api.admin.dict.BatchUpdateDictStatusReply:
            type: object
            properties: {}
        api.admin.dict.BatchUpdateDictStatusRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: 字典id列表
                status:
                    type: integer
                    description: 状态
                    format: enum
        api.admin.dict.CreateDictReply:
            type: object
            properties: {}
        api.admin.dict.CreateDictRequest:
            type: object
            properties:
                name:
                    type: string
                    description: 字典名称
                value:
                    type: string
                    description: 字典值
                dictType:
                    type: integer
                    description: 字典类型
                    format: enum
                colorType:
                    type: string
                cssClass:
                    type: string
                icon:
                    type: string
                imageUrl:
                    type: string
                status:
                    type: integer
                    description: 状态
                    format: enum
                languageCode:
                    type: string
                remark:
                    type: string
        api.admin.dict.DeleteDictReply:
            type: object
            properties: {}
        api.admin.dict.GetDictReply:
            type: object
            properties:
                dict:
                    $ref: '#/components/schemas/api.admin.Dict'
        api.admin.dict.GetDictSelectListRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReq'
                    description: 分页参数
                keyword:
                    type: string
                    description: 关键字模糊查询
                status:
                    type: integer
                    description: 状态查询
                    format: enum
                dictType:
                    type: integer
                    description: 字典类型
                    format: enum
                languageCode:
                    type: string
        api.admin.dict.ListDictReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Dict'
                    description: 字典列表
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReply'
                    description: 分页信息
        api.admin.dict.UpdateDictReply:
            type: object
            properties: {}
        api.admin.dict.UpdateDictRequest:
            type: object
            properties:
                id:
                    type: integer
                    description: 字典id
                    format: uint32
                data:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.dict.CreateDictRequest'
                    description: 更新的数据
        api.admin.resource.BatchUpdateResourceStatusReply:
            type: object
            properties: {}
        api.admin.resource.BatchUpdateResourceStatusRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.admin.resource.GetResourceReply:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/api.admin.ResourceItem'
        api.admin.resource.GetResourceSelectListReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.PaginationReply'
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Select'
        api.admin.resource.GetResourceSelectListRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.PaginationReq'
                keyword:
                    type: string
        api.admin.resource.ListMenuReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Menu'
        api.admin.resource.ListResourceReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.PaginationReply'
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.ResourceItem'
        api.admin.resource.ListResourceRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.PaginationReq'
                keyword:
                    type: string
        api.admin.team.AddTeamMemberReply:
            type: object
            properties: {}
        api.admin.team.AddTeamMemberRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.team.AddTeamMemberRequest_MemberItem'
        api.admin.team.AddTeamMemberRequest_MemberItem:
            type: object
            properties:
                userId:
                    type: integer
                    description: 用户ID
                    format: uint32
                role:
                    type: integer
                    description: 是否设置为管理员
                    format: enum
                roles:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: 绑定的角色列表
        api.admin.team.CreateDepartmentReply:
            type: object
            properties: {}
        api.admin.team.CreateDepartmentRequest:
            type: object
            properties: {}
        api.admin.team.CreateRoleReply:
            type: object
            properties: {}
        api.admin.team.CreateRoleRequest:
            type: object
            properties:
                name:
                    type: string
                    description: 角色名称
                remark:
                    type: string
                    description: 角色描述
                permissions:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: 角色权限(对应api id 列表)
                teamId:
                    type: integer
                    description: 所属团队
                    format: uint32
        api.admin.team.CreateTeamReply:
            type: object
            properties: {}
        api.admin.team.CreateTeamRequest:
            type: object
            properties:
                name:
                    type: string
                    description: 团队名称, 长度限制在3-20个字符
                remark:
                    type: string
                    description: 团队描述, 长度限制在0-200个字符
                logo:
                    type: string
                    description: 团队logo, 长度限制在0-200个字符
                status:
                    type: integer
                    description: 团队状态
                    format: enum
                leaderId:
                    type: integer
                    description: 负责人, 不传为自己
                    format: uint32
                adminIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: 管理员
        api.admin.team.DeleteDepartmentReply:
            type: object
            properties: {}
        api.admin.team.DeleteRoleReply:
            type: object
            properties: {}
        api.admin.team.GetDepartmentReply:
            type: object
            properties: {}
        api.admin.team.GetRoleReply:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/api.admin.TeamRole'
        api.admin.team.GetRoleSelectListReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Select'
        api.admin.team.GetRoleSelectListRequest:
            type: object
            properties:
                keyword:
                    type: string
                teamId:
                    type: integer
                    description: 团队ID
                    format: uint32
        api.admin.team.GetTeamReply:
            type: object
            properties:
                team:
                    $ref: '#/components/schemas/api.admin.Team'
        api.admin.team.ListDepartmentReply:
            type: object
            properties: {}
        api.admin.team.ListRoleReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.TeamRole'
        api.admin.team.ListRoleRequest:
            type: object
            properties:
                keyword:
                    type: string
            description: 不分页
        api.admin.team.ListTeamMemberReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.PaginationReply'
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.TeamMember'
        api.admin.team.ListTeamMemberRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                pagination:
                    $ref: '#/components/schemas/api.PaginationReq'
                gender:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                role:
                    type: integer
                    format: enum
        api.admin.team.ListTeamReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.PaginationReply'
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Team'
        api.admin.team.ListTeamRequest:
            type: object
            properties:
                keyword:
                    type: string
                pagination:
                    $ref: '#/components/schemas/api.PaginationReq'
                status:
                    type: integer
                    description: 状态
                    format: enum
                creatorId:
                    type: integer
                    description: 创建人
                    format: uint32
                leaderId:
                    type: integer
                    description: 负责人
                    format: uint32
        api.admin.team.MyTeamReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Team'
        api.admin.team.RemoveTeamAdminReply:
            type: object
            properties: {}
        api.admin.team.RemoveTeamMemberReply:
            type: object
            properties: {}
        api.admin.team.SetDepartmentAdminReply:
            type: object
            properties: {}
        api.admin.team.SetDepartmentAdminRequest:
            type: object
            properties: {}
        api.admin.team.SetMemberRoleReply:
            type: object
            properties: {}
        api.admin.team.SetMemberRoleRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
                roles:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.admin.team.SetTeamAdminReply:
            type: object
            properties: {}
        api.admin.team.SetTeamAdminRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
        api.admin.team.TransferTeamLeaderReply:
            type: object
            properties: {}
        api.admin.team.TransferTeamLeaderRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
        api.admin.team.UpdateDepartmentReply:
            type: object
            properties: {}
        api.admin.team.UpdateDepartmentRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        api.admin.team.UpdateRoleReply:
            type: object
            properties: {}
        api.admin.team.UpdateRoleRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                data:
                    $ref: '#/components/schemas/api.admin.team.CreateRoleRequest'
        api.admin.team.UpdateRoleStatusReply:
            type: object
            properties: {}
        api.admin.team.UpdateRoleStatusRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.admin.team.UpdateTeamReply:
            type: object
            properties: {}
        api.admin.team.UpdateTeamRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                    description: 团队名称, 长度限制在3-20个字符
                remark:
                    type: string
                    description: 团队描述, 长度限制在0-200个字符
                logo:
                    type: string
                    description: 团队logo, 长度限制在0-200个字符
                status:
                    type: integer
                    description: 团队状态
                    format: enum
            description: 只允许修改基础信息
        api.admin.team.UpdateTeamStatusReply:
            type: object
            properties: {}
        api.admin.team.UpdateTeamStatusRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.admin.user.BatchUpdateUserStatusReply:
            type: object
            properties: {}
        api.admin.user.BatchUpdateUserStatusRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: 用户id列表
                status:
                    type: integer
                    description: 状态
                    format: enum
        api.admin.user.CreateUserReply:
            type: object
            properties: {}
        api.admin.user.CreateUserRequest:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名, 只能是英文字母、数字、下划线, 长度限制在3-20个字符
                nickname:
                    type: string
                    description: 昵称, 长度限制在0-20个字符
                email:
                    type: string
                    description: 邮箱, 必须满足邮箱格式
                phone:
                    type: string
                    description: 手机, 必须满足手机格式
                password:
                    type: string
                    description: 密码
                remark:
                    type: string
                    description: 备注
                avatar:
                    type: string
                    description: 头像URL
                status:
                    type: integer
                    description: 状态
                    format: enum
                gender:
                    type: integer
                    description: 性别
                    format: enum
                role:
                    type: integer
                    description: 角色
                    format: enum
        api.admin.user.DeleteUserReply:
            type: object
            properties: {}
        api.admin.user.GetUserReply:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.User'
                    description: 用户详情
        api.admin.user.GetUserSelectListReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.Select'
                    description: 用户列表
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReply'
                    description: 分页信息
        api.admin.user.GetUserSelectListRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReq'
                    description: 分页参数
                keyword:
                    type: string
                    description: 关键字模糊查询
                status:
                    type: integer
                    description: 状态查询
                    format: enum
                gender:
                    type: integer
                    description: 性别查询
                    format: enum
                role:
                    type: integer
                    description: 角色查询
                    format: enum
        api.admin.user.ListUserReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.admin.User'
                    description: 用户列表
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReply'
                    description: 分页信息
        api.admin.user.ListUserRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.PaginationReq'
                    description: 分页参数
                keyword:
                    type: string
                    description: 关键字模糊查询
                status:
                    type: integer
                    description: 状态查询
                    format: enum
                gender:
                    type: integer
                    description: 性别查询
                    format: enum
                role:
                    type: integer
                    description: 角色查询
                    format: enum
        api.admin.user.ResetUserPasswordBySelfReply:
            type: object
            properties: {}
        api.admin.user.ResetUserPasswordBySelfRequest:
            type: object
            properties:
                oldPassword:
                    type: string
                    description: 旧密码
                newPassword:
                    type: string
                    description: 新密码
        api.admin.user.ResetUserPasswordReply:
            type: object
            properties: {}
        api.admin.user.ResetUserPasswordRequest:
            type: object
            properties:
                id:
                    type: integer
                    description: 用户id
                    format: uint32
            description: 只有系统管理员有此权限
        api.admin.user.UpdateUserAvatarReply:
            type: object
            properties: {}
        api.admin.user.UpdateUserAvatarRequest:
            type: object
            properties:
                avatar:
                    type: string
                    description: 头像
        api.admin.user.UpdateUserEmailReply:
            type: object
            properties: {}
        api.admin.user.UpdateUserEmailRequest:
            type: object
            properties:
                email:
                    type: string
                    description: 新邮箱
        api.admin.user.UpdateUserPhoneReply:
            type: object
            properties: {}
        api.admin.user.UpdateUserPhoneRequest:
            type: object
            properties:
                phone:
                    type: string
                    description: 新电话号码
        api.admin.user.UpdateUserReply:
            type: object
            properties: {}
        api.admin.user.UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    description: 用户id
                    format: uint32
                data:
                    allOf:
                        - $ref: '#/components/schemas/api.admin.user.CreateUserRequest'
                    description: 更新的数据
        api.houyi.metadata.QueryReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.MetricQueryResult'
        api.houyi.metadata.QueryRequest:
            type: object
            properties:
                query:
                    type: string
                    description: 查询语句
                range:
                    type: array
                    items:
                        type: string
                    description: 查询时间范围
                step:
                    type: integer
                    description: 步长
                    format: uint32
                endpoint:
                    type: string
                    description: 数据源
                config:
                    type: object
                    additionalProperties:
                        type: string
                    description: 配置信息
                storageType:
                    type: integer
                    description: 存储类型
                    format: enum
        api.houyi.metadata.SyncMetadataReply:
            type: object
            properties:
                metrics:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.MetricDetail'
                    description: 采集到的指标列表
        api.houyi.metadata.SyncMetadataRequest:
            type: object
            properties:
                endpoint:
                    type: string
                    description: 数据源地址
                config:
                    type: object
                    additionalProperties:
                        type: string
                    description: 配置信息
                storageType:
                    type: integer
                    description: 存储类型
                    format: enum
            description: TODO 前期先明文， 后面再考虑加密
        api.rabbit.hook.SendMsgReply:
            type: object
            properties:
                msg:
                    type: string
                    description: 发送的结果
                code:
                    type: integer
                    description: 状态码
                    format: int32
                time:
                    type: string
                    description: 发送时间
        api.rabbit.hook.SendMsgRequest:
            type: object
            properties:
                jsonData:
                    type: string
                    description: 用于接收外界的数据， 兼容所有json格式
                route:
                    type: string
                    description: 用于匹配该数据发送给谁
        api.rabbit.push.NotifyObjectReply:
            type: object
            properties:
                msg:
                    type: string
                    description: 发送的结果
                code:
                    type: integer
                    description: 状态码
                    format: int32
                time:
                    type: string
                    description: 发送时间
        api.rabbit.push.NotifyObjectRequest:
            type: object
            properties:
                receivers:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/api.Receiver'
                    description: 根据路由匹配具体的发送对象
                templates:
                    type: object
                    additionalProperties:
                        type: string
        api.v1.SayHelloReply:
            type: object
            properties:
                message:
                    type: string
                    description: 参数名称， 这些参数会以json的方式返回给请求方
            description: 定义响应参数
        api.v1.SayHelloRequest:
            type: object
            properties:
                name:
                    type: string
                    description: 参数名称（对应请求方式，例如post请求，此数据会从body中获取）
            description: 定义请求参数
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Authorization
      description: 系统权限控制
    - name: Config
    - name: Datasource
      description: 数据源管理模块
    - name: Department
      description: 部门管理模块
    - name: Dict
      description: 字典服务
    - name: Greeter
      description: The greeting service definition.
    - name: Health
      description: 健康检查接口
    - name: Hello
      description: Hello模块接口定义
    - name: Hook
      description: 用于接受外界需要推送的消息
    - name: Menu
      description: 系统菜单管理模块
    - name: Metric
      description: metric类型数据源元数据同步接口， 子服务需要实现该接口, 支持http和rpc两种同步方式
    - name: Metric
      description: metric数据源数据查询模块
    - name: Resource
      description: 系统公共API资源管理模块
    - name: Role
      description: 团队角色管理
    - name: Team
      description: 多租户下的团队管理
    - name: User
      description: 用户API模块
